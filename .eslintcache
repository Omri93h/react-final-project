[{"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\App.js":"2","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Header.js":"4","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Nav.js":"5","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Footer.js":"6","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Dashboard.js":"7","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Strategies.js":"8","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Settings.js":"9","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Welcome.js":"10","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\SetStrategy.js":"11","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\PageError.js":"12","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Login.js":"13","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\PieChart.js":"14","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Loading.js":"15","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Stripe.js":"16","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\ManualOrder.js":"17","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Premium.js":"18"},{"size":345,"mtime":1613211693922,"results":"19","hashOfConfig":"20"},{"size":5174,"mtime":1613937408845,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":3006,"mtime":1613757857202,"results":"23","hashOfConfig":"20"},{"size":2463,"mtime":1613990474802,"results":"24","hashOfConfig":"20"},{"size":353,"mtime":1613867110745,"results":"25","hashOfConfig":"20"},{"size":8987,"mtime":1614001979027,"results":"26","hashOfConfig":"20"},{"size":15894,"mtime":1614001053372,"results":"27","hashOfConfig":"20"},{"size":1627,"mtime":1614001889258,"results":"28","hashOfConfig":"20"},{"size":3597,"mtime":1613937393760,"results":"29","hashOfConfig":"20"},{"size":5089,"mtime":1613995934950,"results":"30","hashOfConfig":"20"},{"size":375,"mtime":1614001830806,"results":"31","hashOfConfig":"20"},{"size":1876,"mtime":1614001399106,"results":"32","hashOfConfig":"20"},{"size":1211,"mtime":1613841589332,"results":"33","hashOfConfig":"20"},{"size":608,"mtime":1613863886008,"results":"34","hashOfConfig":"20"},{"size":592,"mtime":1613492152993,"results":"35","hashOfConfig":"20"},{"size":8939,"mtime":1613926521472,"results":"36","hashOfConfig":"20"},{"size":2045,"mtime":1613938336553,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"pezvzx",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\index.js",[],["78","79"],"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\App.js",[],"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Header.js",[],"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Nav.js",[],"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Footer.js",[],"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Dashboard.js",["80"],"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Strategies.js",["81","82","83","84","85","86"],"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Settings.js",[],"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Welcome.js",["87","88"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst Welcome = (props) => {\r\n    const video = process.env.PUBLIC_URL + '/vid/video2.mp4';\r\n\r\n    const routeChange = () => {\r\n        window.location.assign('http://localhost:8080/auth/google');\r\n    }\r\n\r\n\r\n    const centerDivStyle = {\r\n        position: \"relative\",\r\n        color: \"#aaa\",\r\n        lineHeight: \"50px\",\r\n        padding: \"100px 0 75px 0\",\r\n        width: \"100%\",\r\n    }\r\n\r\n    const welcomePageH1 = {\r\n        fontSize: \"48px\",\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n\r\n    }\r\n\r\n    const welcomePageParagraph = {\r\n        display: \"block\",\r\n        fontSize: \"24px\",\r\n        width: \"fit-content\",\r\n    }\r\n\r\n    const entryButtonStyle = {\r\n        background: \"#1c316d\",\r\n        color: \"white\",\r\n        opacity: \"0.8\",\r\n        fontWeight: \"bold\",\r\n        padding: \"10px\",\r\n        position: \"absolute\",\r\n        height: \"50px\",\r\n        right: \"30px\",\r\n        top: \"5px\",\r\n        zIndex:\"100\"\r\n    }\r\n\r\n    const contentStyle = { background: 'white', borderRadius: \"10px\", width: \"300px\", border: \"0\", opacity: \".9\" };\r\n    const overlayStyle = { background: 'rgba(0,0,0,0.75)' };\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"videoContainer\">\r\n                <video src={video} alt=\"currenger video\" autoPlay loop muted>\r\n                    (Your browser does not support the video tag)\r\n                </video>\r\n\r\n            </div>\r\n            <div className=\"wrapper\">\r\n                <div className=\"fade-in-fast\">\r\n                    <Button onClick={routeChange} size=\"large\" variant=\"contained\" style={entryButtonStyle}>\r\n                        <pre style={{ fontSize: \"16px\" }}><p style={{ fontSize: \"12px\" }}>Login / Register with</p>\r\n                                GOOGLE</pre>\r\n                    </Button>\r\n                </div>\r\n                <div style={centerDivStyle}>\r\n                    <h1 style={welcomePageH1} className=\"slide-up\">Auto Crypto Trading & Analysis</h1><br />\r\n                    <pre style={welcomePageParagraph} className=\"fade-in-slow\">\r\n                        Manage your cryptocurrency portfolio easily\r\n                    </pre>\r\n\r\n                    {/* \r\n                        {/* <Button onClick={() => (<Redirect to=\"/login\" />)} size=\"large\" variant=\"contained\" style={{ background: \"#1c316d\", color: \"white\", opacity: \"0.8\" }}>\r\n                            New LOGIN\r\n                        </Button>\r\n\r\n                        <Popup trigger={loginButton} modal closeOnDocumentClick {...{ contentStyle, overlayStyle }}>\r\n                            <Login auth={props.auth} user={props.user} />\r\n                        </Popup>\r\n                        <Popup trigger={signUpButton} modal closeOnDocumentClick {...{ contentStyle, overlayStyle }}>\r\n\r\n                            <SignUp />\r\n                        </Popup> */}\r\n\r\n                    {/* </div> */}\r\n                </div>\r\n            </div>\r\n            <style type=\"text/css\">\r\n                {` header {\r\n                                position:absolute;\r\n                                background-color: transparent;\r\n                                transition:0.2s all ease;\r\n                                box-shadow: 0px 0px 1px white\r\n                            } \r\n                            header .user-side {\r\n                                display:none\r\n                            }\r\n                        `}\r\n            </style>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome\r\n","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\SetStrategy.js",["89","90"],"import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport strategies from './../data/strategies.json'\r\nimport NumericInput from 'react-numeric-input';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Button } from \"@material-ui/core\";\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\n\r\nconst symbols = [\r\n    { value: 'DOGEBTC', label: 'DOGE/BTC' },\r\n    { value: 'ETHBTC', label: 'ETH/BTC' },\r\n    { value: 'LTCBTC', label: 'LTC/BTC' },\r\n    { value: 'BNBBTC', label: 'BNB/BTC' },\r\n    { value: 'XRPBTC', label: 'XRP/BTC' },\r\n    { value: 'ADABTC', label: 'ADA/BTC' }\r\n];\r\n\r\nasync function addStrategy(data) {\r\n    await fetch('http://localhost:8080/api/strategy/', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(response => console.log(response));\r\n}\r\n\r\n\r\nconst SetStrategy = ({ match }) => {\r\n    const [isPopupOpen, setOpen] = useState(false);\r\n    const closeModal = () => setOpen(false);\r\n\r\n    const [selected, setSelected] = useState();\r\n    const { control, handleSubmit } = useForm();\r\n    const onSubmit = async (data) => {\r\n        data.strategy_type = match.params.strategyName.replaceAll(\"_\", \" \");\r\n        data.currency = data.currency.value;\r\n        await addStrategy(data);\r\n        handleSubmitPopup();\r\n    }\r\n\r\n    function handleSubmitPopup() {\r\n        setOpen(!isPopupOpen);\r\n        console.log(\"pop up?\")\r\n    }\r\n\r\n    function chooseSelected(opt) {\r\n        setSelected(opt);\r\n    }\r\n\r\n\r\n    function percentFormat(num) {\r\n        return num + '%'\r\n    }\r\n    \r\n    function amountFormat(num) {\r\n        if (!selected) {\r\n            return \"0\"\r\n        }\r\n        const currency = selected.label.slice(0, -4);\r\n        return (num + \" \" + currency);\r\n    }\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"page-header\">S T R A T E G I E S → {match.params.strategyName.replaceAll(\"_\", \" \")}</div>\r\n            <section className=\"big-section\" style={{ width: \"50%\", margin: \"0 auto\" }}>\r\n                <span className=\"section-header\">Strategy Configuration</span>\r\n                <div className=\"wrapper\" style={{ textAlign: \"center\" }} >\r\n                    <form onSubmit={handleSubmit(onSubmit)} style={{ margin: \"20px auto\" }}>\r\n                        <Controller\r\n                            name=\"currency\"\r\n                            control={control}\r\n                            defaultValue={symbols[0]}\r\n                            render={({ onChange }) => (\r\n                                <Select\r\n                                    options={symbols}\r\n                                    placeholder=\"Choose coin ...\"\r\n                                    isSearchable\r\n                                    onChange={e => {\r\n                                        onChange(e)\r\n                                        chooseSelected(e)\r\n                                    }}\r\n\r\n                                />)}\r\n                        />\r\n                        <br /><br />\r\n                        <label>Amount:</label><br />\r\n                        <Controller as={NumericInput} name=\"amount\" defaultValue={0} control={control} min={1} max={9999999} step={1}\r\n                            placeholder=\"Amount ...\" format={amountFormat} /> <br /><br />\r\n                        <label >Profit target:</label><br />\r\n                        <Controller as={NumericInput} name=\"take_profit\" defaultValue={0} control={control} min={3} max={10} step={1}\r\n                            placeholder=\"Profit target  ...\" format={percentFormat} /> <br /><br />\r\n                        <label>Stop loss:</label><br />\r\n                        <Controller as={NumericInput} name=\"stop_loss\" defaultValue={0} control={control} min={3} max={10} step={1}\r\n                            placeholder=\"Stoploss  ...\" format={percentFormat} /> <br /><br />\r\n                        <Button type=\"submit\" variant=\"contained\" size=\"large\"\r\n                            style={{ background: \"#1c316d\", color: \"white\" }}\r\n                            startIcon={<AddIcon />}>\r\n                            Add Strategy\r\n                         </Button>\r\n                    </form>\r\n                    <Popup open={isPopupOpen} closeOnDocumentClick onClose={closeModal}>\r\n                        <div className=\"modal\">\r\n                            <a className=\"close\" onClick={closeModal}>&times;</a>\r\n                            <AssignmentTurnedInIcon style={{ fontSize: 80, color: \"green\" }} /><br />\r\n                                    <span style={{color:\"green\"}}>New strategy added successfully !</span>\r\n                            </div>\r\n                    </Popup>\r\n                </div>\r\n            </section>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SetStrategy\r\n","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\PageError.js",[],"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Login.js",[],"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\PieChart.js",[],"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Loading.js",[],"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Stripe.js",[],"C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\ManualOrder.js",["91"],"import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport NumericInput from 'react-numeric-input';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\nimport { render } from '@testing-library/react';\r\n\r\nconst symbols = [\r\n    { value: 'DOGEBTC', label: 'DOGE/BTC' },\r\n    { value: 'ETHBTC', label: 'ETH/BTC' },\r\n    { value: 'LTCBTC', label: 'LTC/BTC' },\r\n    { value: 'BNBBTC', label: 'BNB/BTC' },\r\n    { value: 'XRPBTC', label: 'XRP/BTC' },\r\n    { value: 'ADABTC', label: 'ADA/BTC' }\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst ManualOrder = ({ match }) => {\r\n    const [selected, setSelected] = useState(undefined);    // symbol\r\n    const [amount, setAmount] = useState(0);                // amount\r\n    const [currencyPrice, setCurrencyPrice] = useState(0);  // price\r\n    const [actionType, setActionType] = useState(\"\");       // buy/sell\r\n    const [orderType, setOrderType] = useState(\"market\");   // market/limit\r\n    const { control, handleSubmit } = useForm();            //form\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOrderTypeChange = (event, currentOrderType) => {\r\n        setOrderType(currentOrderType);\r\n    };\r\n\r\n    const onSubmit = async (data) => {\r\n        data.symbol = data.symbol.value;\r\n        data.action_type = actionType;\r\n        data.price = data.price.toFixed(8);\r\n        orderType === \"market\" ?\r\n            await addMarketOrder(data) :\r\n            await addLimitOrder(data);\r\n    }\r\n\r\n    async function showPrice(selected) {\r\n        const url = `http://localhost:8080/api/binance/getPriceForSymbol/${selected}`;\r\n        const response = await fetch(url, {\r\n            credentials: 'include',\r\n            withCredentials: 'true',\r\n        })\r\n        const commits = await response.json();\r\n        setCurrencyPrice(commits.bidPrice);\r\n    }\r\n\r\n    async function addMarketOrder(data) {\r\n        await fetch('http://localhost:8080/api/binance/marketOrder/', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n    async function addLimitOrder(data) {\r\n        await fetch('http://localhost:8080/api/binance/limitOrder/', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    function chooseSelected(opt) {\r\n        setSelected(opt);\r\n    }\r\n\r\n    function amountFormat(amount) {\r\n        if (!selected) {\r\n            return amount + \"\"\r\n        }\r\n        const currency = selected.label.slice(0, -4);\r\n        return amount + \" \" + currency;\r\n    }\r\n\r\n    function floatFormat(price) {\r\n        return price;\r\n    }\r\n    return (\r\n        <div className=\"page\">\r\n            <span className=\"page-header\" >M A N U A L &nbsp; O R D E R</span>\r\n\r\n            <section className=\"big-section\" style={{ margin: \"0 auto\" }}>\r\n                <Paper className={classes.root}>\r\n                    <Tabs\r\n                        value={orderType}\r\n                        variant='fullWidth'\r\n                        onChange={handleOrderTypeChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        centered\r\n                    >\r\n                        <Tab label=\"MARKET\" value=\"market\" />\r\n                        <Tab label=\"LIMIT\" value=\"limit\" />\r\n                    </Tabs>\r\n                </Paper>\r\n\r\n                <div className=\"wrapper\" style={{ textAlign: \"center\", width: \"50%\" }} >\r\n\r\n                    <form onSubmit={handleSubmit(onSubmit)} style={{ margin: \"20px auto\" }}>\r\n                        <Controller\r\n                            name=\"symbol\"\r\n                            control={control}\r\n                            defaultValue={symbols[0]}\r\n                            render={({ onChange }) => (\r\n                                <Select\r\n                                    options={symbols}\r\n                                    placeholder=\"Choose coin ...\"\r\n                                    isSearchable\r\n                                    onChange={e => {\r\n                                        onChange(e)\r\n                                        chooseSelected(e)\r\n                                        showPrice(e.value)\r\n                                    }}\r\n                                />)}\r\n                        />\r\n                        <label style={{ display: \"block\", marginTop: \"20px\" }}>\r\n                            {selected ? `Current Price: ` : ``}\r\n                        </label>\r\n                        <span>\r\n                            {selected ?\r\n                                `1 ${selected.label.slice(0, selected.label.indexOf('/'))} = `\r\n                                + currencyPrice + ' BTC' :\r\n                                ``}\r\n                        </span>\r\n                        <br /><br />\r\n\r\n                        <label>Amount:</label>\r\n                        <Controller\r\n                            name=\"quantity\"\r\n                            control={control}\r\n                            defaultValue={\"0.0\"}\r\n                            render={({ onChange }) => (\r\n                                <NumericInput\r\n                                    min={0.1}\r\n                                    max={9999999}\r\n                                    step={0.1}\r\n                                    placeholder=\"0.0\"\r\n                                    onChange={e => {\r\n                                        onChange(e)\r\n                                        setAmount(e)\r\n                                    }}\r\n                                    format={amountFormat}\r\n                                />\r\n                            )\r\n                            }\r\n                        />\r\n\r\n                        <br /><br />\r\n\r\n                        <div>\r\n                            <label>Price:</label>\r\n                            <Controller\r\n                                name=\"price\"\r\n                                control={control}\r\n                                defaultValue=\"Market Price\"\r\n                                render={({ onChange }) => (\r\n                                    <NumericInput\r\n                                        disabled={orderType === \"market\" ? true : false}\r\n                                        min={0.00000001}\r\n                                        max={1000}\r\n                                        step={0.00000001}\r\n                                        precision={8}\r\n                                        onChange={e => {\r\n                                            onChange(e)\r\n                                        }}\r\n                                        format={floatFormat}\r\n                                        defaultValue={currencyPrice}\r\n                                        placeholder={orderType === \"market\" ? \"MARKET PRICE\" : \"0.00000001\"}\r\n                                    />\r\n                                )\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                        <br /><br />\r\n\r\n                        <label><b>Total Price: </b></label><br />\r\n\r\n                        <span>{parseFloat(Number(amount)) * parseFloat(Number(currencyPrice))} BTC</span>\r\n\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-evenly\", marginTop: \"50px\" }}>\r\n                            <Button onClick={() => setActionType(\"buy\")} type=\"submit\" name=\"buy\" variant=\"contained\" size=\"large\" style={{ background: \"green\", color: \"white\", width: \"100px\" }} >\r\n                                BUY !\r\n                                </Button>\r\n                            <Button onClick={() => setActionType(\"sell\")} type=\"submit\" name=\"sell\" variant=\"contained\" size=\"large\" style={{ background: \"red\", color: \"white\", width: \"100px\" }} >\r\n                                SELL !\r\n                                </Button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </section>\r\n            {/* <section className=\"small-section\" style={{ margin: \"0 auto\", height: \"400px\" }}>\r\n                    <span className=\"section-header\" style={{ color: \"#444\" }} >Market <b>SELL</b> Order</span>\r\n                </section> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManualOrder\r\n","C:\\Users\\User\\Desktop\\Shenkar\\3 Shana G\\Maarag\\React_Final_Project\\react-final-project\\src\\components\\Premium.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":93,"column":8,"nodeType":"98","endLine":93,"endColumn":17,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":220,"column":37,"nodeType":"102","endLine":220,"endColumn":79},{"ruleId":"103","severity":1,"message":"104","line":220,"column":37,"nodeType":"102","endLine":220,"endColumn":79},{"ruleId":"100","severity":1,"message":"101","line":233,"column":25,"nodeType":"102","endLine":233,"endColumn":67},{"ruleId":"103","severity":1,"message":"104","line":233,"column":25,"nodeType":"102","endLine":233,"endColumn":67},{"ruleId":"100","severity":1,"message":"101","line":279,"column":25,"nodeType":"102","endLine":279,"endColumn":67},{"ruleId":"103","severity":1,"message":"104","line":279,"column":25,"nodeType":"102","endLine":279,"endColumn":67},{"ruleId":"105","severity":1,"message":"106","line":47,"column":11,"nodeType":"107","messageId":"108","endLine":47,"endColumn":23},{"ruleId":"105","severity":1,"message":"109","line":48,"column":11,"nodeType":"107","messageId":"108","endLine":48,"endColumn":23},{"ruleId":"105","severity":1,"message":"110","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":109,"column":29,"nodeType":"102","endLine":109,"endColumn":71},{"ruleId":"105","severity":1,"message":"111","line":10,"column":10,"nodeType":"107","messageId":"108","endLine":10,"endColumn":16},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'balance', 'orders', and 'totalValue'. Either include them or remove the dependency array.","ArrayExpression",["114"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'contentStyle' is assigned a value but never used.","Identifier","unusedVar","'overlayStyle' is assigned a value but never used.","'strategies' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [balance, orders, refresh, totalValue]",{"range":"117","text":"118"},[3567,3576],"[balance, orders, refresh, totalValue]"]